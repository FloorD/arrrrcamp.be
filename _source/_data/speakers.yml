# encoding: UTF-8
- name: Patterson
  firstname: Aaron
  avatar: aaronpatterson.png
  twitter: https://twitter.com/tenderlove
  published: true
  bio: Aaron was born and raised on the mean streets of Salt Lake City. His only hope for survival was to join the local gang of undercover street ballet performers known as the Tender Tights. As a Tender Tights member, Aaron learned to perfect the technique of self-defense pirouettes so that nobody, not even the Parkour Posse could catch him. Between vicious street dance-offs, Aaron taught himself to program. He learned to combine the art of street ballet with the craft of software engineering. Using these unique skills, he was able to leave his life on the streets and become a professional software engineer. He is currently Pirouetting through Processes, and Couruing through code for AT&T. Sometimes he thinks back fondly on his life in the Tender Tights, but then he remembers that it is better to have Tender Loved and Lost than to never have Tender Taught at all.
  title: To be announced...
  slug: aaron-patterson
  description: <p>To be announced...</p>
- name: Heath
  firstname: Fred
  avatar: fred-heath.jpg
  published: true
  title: "Behavior-Driven Development: Feature this!"
  bio: Fred is a software jack of all trades, having worked at every stage of the software development life-cycle. Having waded through tons of C++ and database programming, he discovered Ruby and its ecosystem and hasn't looked back since. After years in the corporate world he is now a freelance developer and consultant.
  slug: fred-heath
  description: |
    <p>Have you tried BDD and given up? Thought it was too much trouble for too little reward? Didn't quite work for you? Fear not, you're not the only one. Many of us have been there, done it and got the 'not really my thing' t-shirt. But here's what I learned: it's not BDD, it's us! BDD works really well, but it has to be applied properly, following certain guidelines and avoiding specific errors.</p>
    <p>During this talk we'll demonstrate the best way to start our BDD journey by defining our system, discovering our Features and writing them correctly, identifying best practices, detecting common traps and pitfalls and learning how to avoid them.</p>
  github: https://github.com/RedFred7
- name: Witek
  firstname: Grzegorz
  avatar: grzegorzwitek.png
  twitter: https://twitter.com/arnvald
  published: true
  title: Patterns, patterns everywhere
  bio: Grzegorz is a web developer constantly looking for new challenges. This month he is based in the Philippines, next month in Taiwan, and in October he's coming to Belgium.
  slug: grzegorz-witek
  description: |
    <p>They're everywhere. They're on the leaf that falls from the tree straight on your head. They're on the building you pass everyday morning. They're on the socks you wear today and in the code you write. Patterns.</p>
    <p>Design patterns are defined as general, reused solutions to recurring design problems. The term, coming from architecture, appeared in software development 20 years ago and since then has been one of the most controversial topics among programmers. Are software design patterns really general and can be reused in various programs? Or are they just solutions with limited scope and don't deserve all the buzz they get? </p>
    <p>Let's have a short trip through the software design patterns we use, the one we don't need anymore and the ones we wish had never been used - all with a pinch of object orientation and a dram of dynamism.</p>
- name: Tennhard
  firstname: Konstantin
  avatar: konstantin-tennhard.jpg
  twitter: https://twitter.com/t6d
  published: true
  title: Natural Language Processing with Ruby
  bio: Konstantin Tennhard is a computer scientist who specializes in developing large scale internet applications. He is passionate about software design, test driven development and all sorts of modern web-technology. His main scientific interest is natural language processing and machine learning.
  slug: konstantin-tennhard
  description: |
    <p>Natural Language Processing (NLP) is the art and science of making sense of user-generated data. It is a combination of state-of-the-art computer science techniques and linguistics. </p>
    <p>Being able to analyze plain text data allows us to gain a lot of insights. Popular NLP tasks are text summarization, keyword extraction or automatic extraction of the author's opinion from a text. In the age of social media, only NLP provides solutions to analyze what users are really care about. Companies such as Google or Facebook invest millions in NLP solutions to harvest information from all the data they have been gathering over the years.</p>
    <p>In this talk, I will present you a real-world NLP problem. We will discuss this problem from both the linguistic and the computer science perspective. Throughout the talk, we will develop a processing pipeline to efficiently solve this problem in an automated fashion. An NLP pipeline usually consists of multiple components, each solving one aspect of the problem and presenting its own challenges. Among other things, you will learn how to tackle the following essential NLP problems using JRuby and OpenNLP: sentence segmentation, tokenization, part-of-speech tagging, and named entity recognition.</p>
- name: Reinhard
  firstname: Lena
  avatar: lena-reinhard.jpg
  twitter: https://twitter.com/ffffux
  published: true
  title: "This is bigger than us: Building a future for Open Source"
  bio: Lena is a writer, editor and photographer specializing in communications, community building and project management in tech. She's a core team member of Hoodie, working on CouchDB. Other than that she's a founder and CEO, musician, surfer and traveller and feels very much alive.
  slug: lena-reinhard
  description: |
    <p>This talk will take you on a journey – from the days of the Easter Islands in the southeastern Pacific Ocean around 700CE, over the mid-15th century in England to Mars, rain forests and coral reefs of our days. On our way, we'll think about the relevance of Open Source Software technology-wise, see why the software we build is a hybrid and which impact this hybridism has on what we build and how. We'll think about Open Source Software's core values, and find out in which terms aiming for diversity (regarding gender, skills, ethnicities and ideas / backgrounds), user-centered approaches, democracy, decentralization and language will be core values when we're building the future of Open Source.</p>
    <p>This talk aims to encourage everyone of us to broaden our horizons when it comes to how far we can go collectively with all our Open Source projects when we're thinking about the future, - and it will show how widening our communities, aiming for diversity, sustainability and attracting new contributours to our projects will enable us to make this future a bright and great one together.</p>
- name: Ries
  firstname: Michael
  avatar: michaelries.jpg
  twitter: https://twitter.com/hqmq_
  published: true
  title: How I Accidentally Wrote the Best Code of my Career
  bio: Michael found his love for programming by trying to make robots. He found his love for ruby by stumbling into the community. He organizes a local user group and can't get enough.
  slug: michael-ries
  description: |
    <p>Picking the right abstractions can be very hard. Understanding object design helps us evaluate tradeoffs, but where do you get the raw ideas to evaluate?</p>
    <p>A group of developers attempted to rewrite a registration system for the 3rd time, and it turned out amazingly well because of some creative thinking. We'll focus on several concrete practices that can help to spark the creative process and give you new ideas the next time you have to do some design.</p>
- name: Schuck
  firstname: T.J.
  avatar: tjschuck.jpg
  twitter: https://twitter.com/tjschuck
  published: true
  title: "80,000 Plaintext Passwords: An Open Source Love Story in Three Acts"
  bio: "T.J. is a developer at Harvest, makers of the world's best time tracking software, where he writes a combination of Ruby and angry rants. He's also a maintainer of bcrypt-ruby, the best way to keep your users' passwords secure, and of rake-compiler-dev-box, the best way to successfully cross-compile your native gems without pulling your hair out."
  slug: tj-schuck
  description: |
    <p>Fluffmuffin, peppercorn, gilligan — those are just a few of our users' plaintext passwords. I have 80,000 more, and it only took me 87 seconds to gather them from our customer database in a white-hat attack. In Act I of this talk, we'll cover the history of secure password storage, examine the hack, and mitigate the threat. Act II will address the difficulties of working on libraries with complicated external dependencies (like bcrypt-ruby, of which I'm now a maintainer). In Act III, we'll celebrate the power of global collaboration via OSS.</p>
